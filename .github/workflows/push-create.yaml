name: Terraform Apply
run-name: Running Terraform Apply by ${{ github.actor }}

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  workflow_dispatch:
    inputs:
      env_select:
        description: "Select the environment to configure: "
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:
  Terraform-Apply:
    runs-on: ubuntu-latest
    env:
      ENV_VAR: ""
    outputs:
      status: ${{ job.status }}
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set the environment variable
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
              echo "ENV_VAR=${{ github.event.inputs.env_select }}" >> $GITHUB_ENV
          else
              echo "ENV_VAR=dev" >> $GITHUB_ENV   #defaults to "dev" for any non workflow_dispatch events

      - name: Terraform Init
        run: terraform init

      - name: Terraform workspace new environment and select
        run: |
          terraform workspace select "${{ env.ENV_VAR }}" 2>/dev/null || terraform workspace new "${{ env.ENV_VAR }}"
          terraform workspace list
      #- name: Terraform workspace new environment and select
      #  run: |
      #    terraform workspace select ${{ github.event.inputs.env_select }} 2>/dev/null|| terraform workspace new ${{ github.event.inputs.env_select }}
      #    terraform workspace list

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -var-file="./${{ env.ENV_VAR }}.tfvars"
      #- name: Terraform Plan
      #  run: terraform plan -no-color -input=false -var-file="./${{ github.event.inputs.env_select }}.tfvars"

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve
      #- name: Terraform Apply
      #  run: terraform apply -no-color -auto-approve

      - name: Export terraform outputs
        id: tfout
        run: |
          terraform output

      #- name: Wait for 5min
      #  run: sleep 300

      #- name: Terraform Destroy
      #  run: terraform destroy -no-color -auto-approve

  Summary:
    needs: [Terraform-Apply]
    runs-on: ubuntu-latest
    steps:
      - name: Adding markdown
        run: |
          TF_STATUS=${{ needs.Terraform-Apply.outputs.status }}

          echo '## ðŸš€ Preparing Build Summary ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo "| Job Name        | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| tf-apply        | $TF_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo '## Job ran by: ${{ github.actor }}' >> $GITHUB_STEP_SUMMARY
